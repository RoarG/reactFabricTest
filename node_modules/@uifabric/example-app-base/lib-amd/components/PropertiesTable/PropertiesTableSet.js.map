{"version":3,"sources":["components/PropertiesTable/PropertiesTableSet.tsx"],"names":[],"mappings":";;;;;;;;;;;;;IAUA;QAAwC,sCAAmE;QAKzG,4BAAY,KAA+B;YAA3C,YACE,kBAAM,KAAK,CAAC,SAyBb;YAxBO,IAAA,mCAAa,EAAE,mCAAa,EAAE,uBAAO,CAAW;YACtD,IAAI,GAAG,CAAC;YACR,IAAI,UAAU,GAAgB,EAAE,CAAC;YAEjC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,GAAG,GAAG,EAAE,CAAC;gBACT,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,GAAG,IAAI,MAAM,EAAb,CAAa,CAAC,CAAC;YAC3C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,CAAC,CAAC;gBAC1C,GAAG,GAAG,OAAO,CAAC,aAAa,GAAG,aAAa,GAAG,WAAW,CAAC,CAAC;YAC7D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;YACxF,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrB,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,IAAY;oBACpC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,aAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,UAAU,GAAG,aAAK,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC;YAED,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,UAAU;aACvB,CAAC;;QACJ,CAAC;QAEM,uCAAU,GAAjB;YAAA,iBAOC;YANC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,IAAe;gBAC/C,OAAA,CAAC,oBAAC,iCAAe,IACf,GAAG,EAAG,IAAI,CAAC,YAAY,EACvB,KAAK,EAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,YAAY,EAClH,UAAU,EAAG,IAAI,CAAC,QAAQ,EAC1B,YAAY,EAAG,IAAI,CAAC,YAAY,KAAK,oBAAY,CAAC,IAAI,GAAK,CAAC;YAJ9D,CAI8D,CAAC,CAAC;QACpE,CAAC;QAEM,mCAAM,GAAb;YACE,MAAM,CAAC,CACL,iCACI,IAAI,CAAC,UAAU,EAAE,CACf,CACP,CAAC;QACJ,CAAC;QACH,yBAAC;IAAD,CAjDA,AAiDC,CAjDuC,KAAK,CAAC,SAAS;IACvC,+BAAY,GAAG;QAC3B,KAAK,EAAE,YAAY;KACpB,CAAC;IAHS,gDAAkB","file":"components/PropertiesTable/PropertiesTableSet.js","sourcesContent":["import * as React from 'react';\r\nimport { IProperty, PropertyType } from '../../utilities/parser/index';\r\nimport { PropertiesTable } from './PropertiesTable';\r\nimport { IPropertiesTableSetProps } from './PropertiesTableSet.Props';\r\nimport { parse } from '../../utilities/parser/index';\r\n\r\nexport interface IPropertiesTableSetState {\r\n  properties: Array<IProperty>;\r\n}\r\n\r\nexport class PropertiesTableSet extends React.Component<IPropertiesTableSetProps, IPropertiesTableSetState> {\r\n  public static defaultProps = {\r\n    title: 'Properties'\r\n  };\r\n\r\n  constructor(props: IPropertiesTableSetProps) {\r\n    super(props);\r\n    let { componentName, componentPath, sources } = props;\r\n    let src;\r\n    let properties: IProperty[] = [];\r\n\r\n    if (sources) {\r\n      src = '';\r\n      sources.forEach(source => src += source);\r\n    } else if (componentPath && componentName) {\r\n      src = require(componentPath + componentName + '.Props.ts');\r\n    } else {\r\n      throw new Error('PropertiesTableSet was used without source or a componentPath/name');\r\n    }\r\n\r\n    if (props.renderOnly) {\r\n      props.renderOnly.forEach((item: string) => {\r\n        properties = properties.concat(parse(src, item));\r\n      });\r\n    } else {\r\n      properties = parse(src);\r\n    }\r\n\r\n    this.state = {\r\n      properties: properties\r\n    };\r\n  }\r\n\r\n  public renderEach() {\r\n    return this.state.properties.map((item: IProperty) =>\r\n      (<PropertiesTable\r\n        key={ item.propertyName }\r\n        title={ item.name === ('I' + this.props.componentName) ? (this.props.componentName + ' class') : item.propertyName }\r\n        properties={ item.property }\r\n        renderAsEnum={ item.propertyType === PropertyType.enum } />));\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        { this.renderEach() }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}