{"version":3,"sources":["components/ExampleCard/ExampleCard.tsx"],"names":[],"mappings":";;;;;;;;;;;;;IAoBA;QAAiC,+BAAqD;QAEpF,qBAAY,KAAwB;YAApC,YACE,kBAAM,KAAK,CAAC,SAOb;YALC,KAAI,CAAC,KAAK,GAAG;gBACX,aAAa,EAAE,KAAK;aACrB,CAAC;YAEF,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;QAC/D,CAAC;QAEM,4BAAM,GAAb;YACQ,IAAA,eAAsD,EAApD,gBAAK,EAAE,cAAI,EAAE,sBAAQ,EAAE,kCAAc,CAAgB;YACrD,IAAA,wCAAa,CAAgB;YACrC,IAAI,SAAS,GAAG,aAAa,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,iBAAiB,GAAG,EAAE,CAAC,CAAC;YAEpF,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,SAAS;gBACxB,6BAAK,SAAS,EAAC,oBAAoB;oBACjC,8BAAM,SAAS,EAAC,6BAA6B,IAAG,KAAK,CAAS;oBAC9D,6BAAK,SAAS,EAAC,qCAAqC,IAChD,IAAI,GAAG,CACP,oBAAC,sBAAa,IACZ,SAAS,EAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,EACjC,OAAO,EAAG,IAAI,CAAC,kBAAkB,EACjC,SAAS,EAAG,eAAG,CAAC,wBAAwB,EAAE,EAAE,WAAW,EAAE,aAAa,EAAE,CAAC,IAEvE,aAAa,GAAG,WAAW,GAAG,WAAW,CAC7B,CACjB,GAAG,CAAC,IAAI,CAAC,CACN,CACF;gBAEN,6BAAK,SAAS,EAAC,kBAAkB,IAC7B,aAAa,IAAI,CACjB,oBAAC,qBAAS,QACN,IAAI,CACI,CACb,CACG;gBAEN,6BAAK,SAAS,EAAG,eAAG,CAAC,qBAAqB,EAAE,EAAE,mBAAmB,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,wBAAsB,MAAM,IAC9G,QAAQ,CACN;gBAEJ,IAAI,CAAC,eAAe,EAAE,CACpB,CACP,CAAC;QACJ,CAAC;QAEO,qCAAe,GAAvB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,yBAAyB;oBACtC,6BAAK,SAAS,EAAC,iBAAiB;wBAC9B,qCAAW;wBACT,IAAI,CAAC,KAAK,CAAC,GAAG,CACZ;oBACN,6BAAK,SAAS,EAAC,mBAAmB;wBAChC,yCAAe;wBACb,IAAI,CAAC,KAAK,CAAC,KAAK,CACd,CACF,CACP,CAAC;YACJ,CAAC;QACH,CAAC;QAEO,wCAAkB,GAA1B;YACE,IAAI,CAAC,QAAQ,CAAC;gBACZ,aAAa,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa;aACzC,CAAC,CAAC;QACL,CAAC;QACH,kBAAC;IAAD,CAzEA,AAyEC,CAzEgC,KAAK,CAAC,SAAS,GAyE/C;IAzEY,kCAAW","file":"components/ExampleCard/ExampleCard.js","sourcesContent":["import * as React from 'react';\r\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\r\nimport './ExampleCard.scss';\r\nimport { CommandButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Highlight } from '../Highlight/Highlight';\r\n\r\nexport interface IExampleCardProps {\r\n  title: string;\r\n  isOptIn?: boolean;\r\n  code?: string;\r\n  children?: any;\r\n  isRightAligned?: boolean;\r\n  dos?: JSX.Element;\r\n  donts?: JSX.Element;\r\n}\r\n\r\nexport interface IExampleCardState {\r\n  isCodeVisible?: boolean;\r\n}\r\n\r\nexport class ExampleCard extends React.Component<IExampleCardProps, IExampleCardState> {\r\n\r\n  constructor(props: IExampleCardProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isCodeVisible: false\r\n    };\r\n\r\n    this._onToggleCodeClick = this._onToggleCodeClick.bind(this);\r\n  }\r\n\r\n  public render() {\r\n    const { title, code, children, isRightAligned } = this.props;\r\n    const { isCodeVisible } = this.state;\r\n    let rootClass = 'ExampleCard' + (this.state.isCodeVisible ? ' is-codeVisible' : '');\r\n\r\n    return (\r\n      <div className={ rootClass }>\r\n        <div className='ExampleCard-header'>\r\n          <span className='ExampleCard-title ms-font-l'>{ title }</span>\r\n          <div className='ExampleCard-toggleButtons ms-font-l'>\r\n            { code ? (\r\n              <CommandButton\r\n                iconProps={ { iconName: 'Embed' } }\r\n                onClick={ this._onToggleCodeClick }\r\n                className={ css('ExampleCard-codeButton', { 'is-active': isCodeVisible }) }\r\n              >\r\n                { isCodeVisible ? 'Hide code' : 'Show code' }\r\n              </CommandButton>\r\n            ) : (null) }\r\n          </div>\r\n        </div>\r\n\r\n        <div className='ExampleCard-code'>\r\n          { isCodeVisible && (\r\n            <Highlight>\r\n              { code }\r\n            </Highlight>\r\n          ) }\r\n        </div>\r\n\r\n        <div className={ css('ExampleCard-example', { ' is-right-aligned': (isRightAligned) }) } data-is-scrollable='true'>\r\n          { children }\r\n        </div>\r\n\r\n        { this._getDosAndDonts() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getDosAndDonts() {\r\n    if (this.props.dos && this.props.donts) {\r\n      return (\r\n        <div className='ExampleCard-dosAndDonts'>\r\n          <div className='ExampleCard-dos'>\r\n            <h4>Do</h4>\r\n            { this.props.dos }\r\n          </div>\r\n          <div className='ExampleCard-donts'>\r\n            <h4>Do not</h4>\r\n            { this.props.donts }\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  private _onToggleCodeClick() {\r\n    this.setState({\r\n      isCodeVisible: !this.state.isCodeVisible\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}