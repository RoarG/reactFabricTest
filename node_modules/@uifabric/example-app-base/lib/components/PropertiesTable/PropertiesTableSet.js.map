{"version":3,"sources":["components/PropertiesTable/PropertiesTableSet.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,sDAAuE;AACvE,qDAAoD;AAEpD,sDAAqD;AAMrD;IAAwC,sCAAmE;IAKzG,4BAAY,KAA+B;QAA3C,YACE,kBAAM,KAAK,CAAC,SAyBb;QAxBO,IAAA,mCAAa,EAAE,mCAAa,EAAE,uBAAO,CAAW;QACtD,IAAI,GAAG,CAAC;QACR,IAAI,UAAU,GAAgB,EAAE,CAAC;QAEjC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,GAAG,GAAG,EAAE,CAAC;YACT,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,GAAG,IAAI,MAAM,EAAb,CAAa,CAAC,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,CAAC,CAAC;YAC1C,GAAG,GAAG,OAAO,CAAC,aAAa,GAAG,aAAa,GAAG,WAAW,CAAC,CAAC;QAC7D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;QACxF,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YACrB,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,IAAY;gBACpC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,aAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,UAAU,GAAG,aAAK,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QAED,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,UAAU;SACvB,CAAC;;IACJ,CAAC;IAEM,uCAAU,GAAjB;QAAA,iBAOC;QANC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,IAAe;YAC/C,OAAA,CAAC,oBAAC,iCAAe,IACf,GAAG,EAAG,IAAI,CAAC,YAAY,EACvB,KAAK,EAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,YAAY,EAClH,UAAU,EAAG,IAAI,CAAC,QAAQ,EAC1B,YAAY,EAAG,IAAI,CAAC,YAAY,KAAK,oBAAY,CAAC,IAAI,GAAK,CAAC;QAJ9D,CAI8D,CAAC,CAAC;IACpE,CAAC;IAEM,mCAAM,GAAb;QACE,MAAM,CAAC,CACL,iCACI,IAAI,CAAC,UAAU,EAAE,CACf,CACP,CAAC;IACJ,CAAC;IACH,yBAAC;AAAD,CAjDA,AAiDC,CAjDuC,KAAK,CAAC,SAAS;AACvC,+BAAY,GAAG;IAC3B,KAAK,EAAE,YAAY;CACpB,CAAC;AAHS,gDAAkB","file":"components/PropertiesTable/PropertiesTableSet.js","sourcesContent":["import * as React from 'react';\r\nimport { IProperty, PropertyType } from '../../utilities/parser/index';\r\nimport { PropertiesTable } from './PropertiesTable';\r\nimport { IPropertiesTableSetProps } from './PropertiesTableSet.Props';\r\nimport { parse } from '../../utilities/parser/index';\r\n\r\nexport interface IPropertiesTableSetState {\r\n  properties: Array<IProperty>;\r\n}\r\n\r\nexport class PropertiesTableSet extends React.Component<IPropertiesTableSetProps, IPropertiesTableSetState> {\r\n  public static defaultProps = {\r\n    title: 'Properties'\r\n  };\r\n\r\n  constructor(props: IPropertiesTableSetProps) {\r\n    super(props);\r\n    let { componentName, componentPath, sources } = props;\r\n    let src;\r\n    let properties: IProperty[] = [];\r\n\r\n    if (sources) {\r\n      src = '';\r\n      sources.forEach(source => src += source);\r\n    } else if (componentPath && componentName) {\r\n      src = require(componentPath + componentName + '.Props.ts');\r\n    } else {\r\n      throw new Error('PropertiesTableSet was used without source or a componentPath/name');\r\n    }\r\n\r\n    if (props.renderOnly) {\r\n      props.renderOnly.forEach((item: string) => {\r\n        properties = properties.concat(parse(src, item));\r\n      });\r\n    } else {\r\n      properties = parse(src);\r\n    }\r\n\r\n    this.state = {\r\n      properties: properties\r\n    };\r\n  }\r\n\r\n  public renderEach() {\r\n    return this.state.properties.map((item: IProperty) =>\r\n      (<PropertiesTable\r\n        key={ item.propertyName }\r\n        title={ item.name === ('I' + this.props.componentName) ? (this.props.componentName + ' class') : item.propertyName }\r\n        properties={ item.property }\r\n        renderAsEnum={ item.propertyType === PropertyType.enum } />));\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        { this.renderEach() }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}